一.在使用v-for 渲染列表时,如果涉及到数据顺序变化,那么跟随数据的一些状态(eg:勾选状态),
    默认情况选不会跟随数据的顺序的改变而改变,也是vue默认策略:就地复用,好处:减少dom操作
    坏处:一旦数据改变,不会跟着数据的变化而改变,会保持原来的状态

    解决办法:加上唯一键,key,坏处:增加了dom操作(影响很小,默认排序会根据key来变化)

    使用v-for的时候,可以加上唯一键

二>条件渲染
    1.v-if 满足条件会进行dom的渲染,不满足条件,则不渲染
    2.v-show 无论满不能满足条件都会进行dom渲染,只会显示和隐藏

    使用场景:
        v-if:使用在不需要频繁切换显示隐藏的元素上
        v-show:使用频繁切换显示隐藏的元素

三.添加

四.搜索

五.过滤器的定义语法
    Vue.fifter('过滤器名称',function(msg){
        可以用正则匹配
        return msg.replace('替换的字符','要替换的字符)
    })
过滤器知识为了渲染输出最后做渲染输出的最后一道处理,一般用字符串的操作,
不要在里面处理大量函数

全局过滤器
参数一:过滤器的名称
参数二:处理函数
